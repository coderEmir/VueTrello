"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const koa_1 = __importDefault(require("koa"));
const koa_bodyparser_1 = __importDefault(require("koa-bodyparser"));
const koa_router_1 = __importDefault(require("koa-router"));
const index_1 = require("../index");
let app;
let router;
let nativeServer;
beforeAll(async () => {
    app = new koa_1.default();
    router = new koa_router_1.default();
    await index_1.bootstrapControllers(app, {
        basePath: "/api",
        controllers: [__dirname + "/util/controllers/**/*.ts"],
        versions: ["1", "2"],
        router: router
    });
    app.use(koa_bodyparser_1.default());
    app.use(router.routes());
    app.use(router.allowedMethods());
    nativeServer = app.listen();
});
afterAll(done => {
    if (nativeServer.listening) {
        nativeServer.close(done);
    }
    else {
        done();
    }
});
describe.only("library exports", () => {
    it("controllers", async () => {
        const controllers = index_1.getControllers();
        expect(controllers).toBeDefined();
        expect(controllers.ActionController).toBeDefined();
        expect(controllers.ArgController).toBeDefined();
        expect(controllers.ProtectedController).toBeDefined();
    });
});
//# sourceMappingURL=library.exports.test.js.map